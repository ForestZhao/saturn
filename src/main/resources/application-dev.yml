server:
  session-timeout: 1800
  port: 3443
message:
  apikey:
    yunpian: af16276ef792da62041d4d6572fcfc52
debug: true
logging:
  level:
    root: info
    com.bootdo: debug
    org:
      springframework:
        boot:
          autoconfigure: ERROR
  config: classpath:logback-boot-${spring.profiles.active}.xml
  path: log
mybatis:
  mapper-locations: classpath:/mapper/**/*Mapper.xml
spring:
  aop:
    auto: true
    proxy-target-class: true
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/saturn?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC
    username: root
    password: zjs00001
    initialSize: 1
    minIdle: 3
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat: true
  thymeleaf:
    cache: false
  devtools:
    restart:
      enabled: true
  redis:
    # Redis数据库索引（默认为0）
    database: 0
    host: 114.55.127.35
    port: 6379
    password: TGB7ygv7ujm9ksiue8
    # 连接超时时间（毫秒）
    timeout: 10000
    block-when-exhausted: true
    maxTotal: 1000
    jedis:
      pool:
        # 连接池中的最大空闲连接
        max-idle: 30
        # 连接池中的最小空闲连接
        min-idle: 8
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 100
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1


